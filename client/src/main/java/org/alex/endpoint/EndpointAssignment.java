package org.alex.endpoint;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-01-22T14:39:44.365+03:00
 * Generated source version: 3.2.7
 *
 */
@WebService(targetNamespace = "http://endpoint.alex.org/", name = "EndpointAssignment")
@XmlSeeAlso({ObjectFactory.class})
public interface EndpointAssignment {

    @WebMethod
    @Action(input = "http://endpoint.alex.org/EndpointAssignment/getAssignmentRequest", output = "http://endpoint.alex.org/EndpointAssignment/getAssignmentResponse")
    @RequestWrapper(localName = "getAssignment", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.GetAssignment")
    @ResponseWrapper(localName = "getAssignmentResponse", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.GetAssignmentResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<org.alex.endpoint.Assignment> getAssignment(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://endpoint.alex.org/EndpointAssignment/mergeAssignmentRequest", output = "http://endpoint.alex.org/EndpointAssignment/mergeAssignmentResponse")
    @RequestWrapper(localName = "mergeAssignment", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.MergeAssignment")
    @ResponseWrapper(localName = "mergeAssignmentResponse", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.MergeAssignmentResponse")
    public void mergeAssignment(
        @WebParam(name = "arg0", targetNamespace = "")
        java.util.List<org.alex.endpoint.Assignment> arg0
    );

    @WebMethod
    @Action(input = "http://endpoint.alex.org/EndpointAssignment/createAssignmentRequest", output = "http://endpoint.alex.org/EndpointAssignment/createAssignmentResponse")
    @RequestWrapper(localName = "createAssignment", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.CreateAssignment")
    @ResponseWrapper(localName = "createAssignmentResponse", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.CreateAssignmentResponse")
    public void createAssignment(
        @WebParam(name = "arg0", targetNamespace = "")
        org.alex.endpoint.Assignment arg0
    );

    @WebMethod
    @Action(input = "http://endpoint.alex.org/EndpointAssignment/getAllAssignmentRequest", output = "http://endpoint.alex.org/EndpointAssignment/getAllAssignmentResponse")
    @RequestWrapper(localName = "getAllAssignment", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.GetAllAssignment")
    @ResponseWrapper(localName = "getAllAssignmentResponse", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.GetAllAssignmentResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<org.alex.endpoint.Assignment> getAllAssignment();

    @WebMethod
    @Action(input = "http://endpoint.alex.org/EndpointAssignment/vacuumRequest", output = "http://endpoint.alex.org/EndpointAssignment/vacuumResponse")
    @RequestWrapper(localName = "vacuum", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.Vacuum")
    @ResponseWrapper(localName = "vacuumResponse", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.VacuumResponse")
    public void vacuum();

    @WebMethod
    @Action(input = "http://endpoint.alex.org/EndpointAssignment/delAssignmentRequest", output = "http://endpoint.alex.org/EndpointAssignment/delAssignmentResponse", fault = {@FaultAction(className = IllegalStringException_Exception.class, value = "http://endpoint.alex.org/EndpointAssignment/delAssignment/Fault/IllegalStringException")})
    @RequestWrapper(localName = "delAssignment", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.DelAssignment")
    @ResponseWrapper(localName = "delAssignmentResponse", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.DelAssignmentResponse")
    public void delAssignment(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1
    ) throws IllegalStringException_Exception;
}

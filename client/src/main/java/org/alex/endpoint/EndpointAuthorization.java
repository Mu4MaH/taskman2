package org.alex.endpoint;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-01-22T14:39:45.974+03:00
 * Generated source version: 3.2.7
 *
 */
@WebService(targetNamespace = "http://endpoint.alex.org/", name = "EndpointAuthorization")
@XmlSeeAlso({ObjectFactory.class})
public interface EndpointAuthorization {

    @WebMethod
    @Action(input = "http://endpoint.alex.org/EndpointAuthorization/loginCheckRequest", output = "http://endpoint.alex.org/EndpointAuthorization/loginCheckResponse")
    @RequestWrapper(localName = "loginCheck", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.LoginCheck")
    @ResponseWrapper(localName = "loginCheckResponse", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.LoginCheckResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.Boolean loginCheck(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://endpoint.alex.org/EndpointAuthorization/createTokenRequest", output = "http://endpoint.alex.org/EndpointAuthorization/createTokenResponse", fault = {@FaultAction(className = UnsupportedEncodingException_Exception.class, value = "http://endpoint.alex.org/EndpointAuthorization/createToken/Fault/UnsupportedEncodingException"), @FaultAction(className = GeneralSecurityException_Exception.class, value = "http://endpoint.alex.org/EndpointAuthorization/createToken/Fault/GeneralSecurityException")})
    @RequestWrapper(localName = "createToken", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.CreateToken")
    @ResponseWrapper(localName = "createTokenResponse", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.CreateTokenResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String createToken(
        @WebParam(name = "arg0", targetNamespace = "")
        org.alex.endpoint.Session arg0
    ) throws UnsupportedEncodingException_Exception, GeneralSecurityException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.alex.org/EndpointAuthorization/tokenCheckRequest", output = "http://endpoint.alex.org/EndpointAuthorization/tokenCheckResponse", fault = {@FaultAction(className = UnsupportedEncodingException_Exception.class, value = "http://endpoint.alex.org/EndpointAuthorization/tokenCheck/Fault/UnsupportedEncodingException"), @FaultAction(className = GeneralSecurityException_Exception.class, value = "http://endpoint.alex.org/EndpointAuthorization/tokenCheck/Fault/GeneralSecurityException")})
    @RequestWrapper(localName = "tokenCheck", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.TokenCheck")
    @ResponseWrapper(localName = "tokenCheckResponse", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.TokenCheckResponse")
    @WebResult(name = "return", targetNamespace = "")
    public org.alex.endpoint.Session tokenCheck(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    ) throws UnsupportedEncodingException_Exception, GeneralSecurityException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.alex.org/EndpointAuthorization/passwordCheckRequest", output = "http://endpoint.alex.org/EndpointAuthorization/passwordCheckResponse")
    @RequestWrapper(localName = "passwordCheck", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.PasswordCheck")
    @ResponseWrapper(localName = "passwordCheckResponse", targetNamespace = "http://endpoint.alex.org/", className = "org.alex.endpoint.PasswordCheckResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.Boolean passwordCheck(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1
    );
}
